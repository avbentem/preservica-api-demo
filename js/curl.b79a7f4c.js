(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["curl"],{"52a2":function(e,t,c){"use strict";c.r(t);var r=c("7a23"),s={class:"intro"},a=Object(r["m"])("h1",null,"curl",-1),n={key:0},l=Object(r["l"])(" The last API request can be executed "),o=Object(r["m"])("a",{href:"https://curl.se/"},"using curl",-1),u=Object(r["l"])(" as: "),d={key:1},b=Object(r["l"])(" If any API request has been made, then this page will show the command to repeat the last request "),i=Object(r["m"])("a",{href:"https://curl.se/"},"using curl",-1),h=Object(r["l"])(". "),O={class:"intro"},j={key:0},p=Object(r["k"])(" Note that this is not exactly the same as the request that this application makes through your browser. Any proxy server is ignored, and a browser includes additional headers such as <code>Origin</code>, <code>Referer</code>, <code>Accept-Encoding</code> and <code>Accept-Language</code>. Just like a browser, curl will add its own <code>Host</code>, <code>User-Agent</code> and <code>Content-Length</code>. ",15);function w(e,t,c,w,m,g){return Object(r["w"])(),Object(r["h"])(r["a"],null,[Object(r["m"])("div",s,[a,e.lastCurl?(Object(r["w"])(),Object(r["h"])("p",n,[l,o,u])):(Object(r["w"])(),Object(r["h"])("p",d,[b,i,h]))]),Object(r["m"])("div",null,[Object(r["m"])("p",null,[Object(r["m"])("strong",null,[Object(r["m"])("code",null,Object(r["I"])(e.lastCurl),1)])])]),Object(r["m"])("div",O,[e.lastCurl?(Object(r["w"])(),Object(r["h"])("p",j,[p])):Object(r["i"])("",!0)])],64)}var m=c("d0f2"),g=Object(r["n"])({name:"Curl",setup:function(){var e=Object(m["b"])(),t=e.lastCurl;return{lastCurl:t}}});g.render=w;t["default"]=g}}]);
//# sourceMappingURL=curl.b79a7f4c.js.map